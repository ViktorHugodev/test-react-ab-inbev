diff --git a/front-next/src/app/(routes)/dashboard/page.tsx b/front-next/src/app/(routes)/dashboard/page.tsx
index 06e0558..7f63e51 100644
--- a/front-next/src/app/(routes)/dashboard/page.tsx
+++ b/front-next/src/app/(routes)/dashboard/page.tsx
@@ -1,27 +1,27 @@
 "use client";
 
-import { useState, useEffect } from "react";
-import { ArrowRight, PlusCircle } from "lucide-react";
-import { Button } from "@/components/ui/button";
-import { EmployeeRole } from "@/types/employee";
-import { useGetEmployees } from "@/services/employee/queries";
-import { useGetDepartments } from "@/services/department/queries";
+import { useEffect, useState } from "react";
+
+import { DashboardCharts } from '@/components/pages/dashboard/dashboard-chart';
 import { DashboardHeader } from '@/components/pages/dashboard/dashboard-header';
 import { StatsData, StatsOverview } from '@/components/pages/dashboard/stats-overview';
-import { DashboardCharts } from '@/components/pages/dashboard/dashboard-chart';
+import { Button } from "@/components/ui/button";
 import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
+import { useGetDepartments } from "@/services/department/queries";
+import { useGetEmployees } from "@/services/employee/queries";
+import { EmployeeRole } from "@/types/employee";
 import { useRouter } from "next/navigation";
 
 export default function DashboardPage() {
   const router = useRouter();
   const { data: employeesData, isLoading: isLoadingEmployees } = useGetEmployees({
     pageNumber: 1,
-    pageSize: 100, // Get a larger sample for complete stats
+    pageSize: 100, 
   });
 
   const { data: departmentsData, isLoading: isLoadingDepartments } = useGetDepartments();
 
-  // Stats calculations
+  
   const [stats, setStats] = useState<StatsData>({
     totalEmployees: 0,
     totalManagers: 0,
@@ -33,18 +33,18 @@ export default function DashboardPage() {
 
   useEffect(() => {
     if (employeesData?.items && departmentsData) {
-      // Total employees
+      
       const totalEmployees = employeesData.totalCount;
       
-      // Count managers
+      
       const managersCount = employeesData.items.filter(
         (e) => e.role === EmployeeRole.Leader || e.role === EmployeeRole.Director
       ).length;
       
-      // Total departments
+      
       const totalDepartments = departmentsData.length;
       
-      // Count new employees in the last month
+      
       const oneMonthAgo = new Date();
       oneMonthAgo.setMonth(oneMonthAgo.getMonth() - 1);
       
@@ -54,12 +54,12 @@ export default function DashboardPage() {
         return createdAt >= oneMonthAgo;
       }).length;
       
-      // Calculate average team size
+      
       const averageTeamSize = managersCount > 0 
         ? Math.round((totalEmployees - managersCount) / managersCount) 
         : 0;
 
-      // Calculate employee percentage
+      
       const employeePercentage = totalEmployees > 0
         ? Math.round((employeesData.items.filter(e => e.role === EmployeeRole.Employee).length / totalEmployees) * 100)
         : 0;
@@ -77,22 +77,22 @@ export default function DashboardPage() {
 
   return (
     <div className="bg-background min-h-screen">
-      {/* Header */}
+      {}
       <DashboardHeader 
         title="Dashboard Administrativo" 
         subtitle="Visão geral do sistema de gerenciamento de funcionários - AB InBev" 
       />
 
-      {/* Main Content */}
+      {}
       <div className="container px-6 py-8">
-        {/* Stats Overview */}
+        {}
         <StatsOverview 
           data={stats} 
           isLoadingEmployees={isLoadingEmployees} 
           isLoadingDepartments={isLoadingDepartments} 
         />
 
-        {/* Cards de Acesso Rápido */}
+        {}
         <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-8">
           <Card className="rounded-3xl overflow-hidden hover:shadow-md transition-all duration-300 bg-gradient-to-br from-card to-card/80 border-none">
             <CardHeader className="pb-2">
@@ -131,7 +131,7 @@ export default function DashboardPage() {
           </Card>
         </div>
 
-        {/* Dashboard Charts */}
+        {}
         <div className="mt-8">
           <h2 className="text-2xl font-bold mb-6">Análise de Dados</h2>
           <DashboardCharts />
diff --git a/front-next/src/app/(routes)/departments/[departmentId]/page.tsx b/front-next/src/app/(routes)/departments/[departmentId]/page.tsx
index e4f23f7..bd3ec54 100644
--- a/front-next/src/app/(routes)/departments/[departmentId]/page.tsx
+++ b/front-next/src/app/(routes)/departments/[departmentId]/page.tsx
@@ -45,21 +45,21 @@ export default function DepartmentDetailPage() {
   const departmentId = params.departmentId as string;
   const [searchTerm, setSearchTerm] = useState("");
   
-  // Fetch department details
+  
   const { 
     data: department, 
     isLoading: isLoadingDepartment, 
     isError: isDepartmentError 
   } = useGetDepartment(departmentId);
   
-  // Fetch employees in this department
+  
   const { 
     data: employees, 
     isLoading: isLoadingEmployees, 
     isError: isEmployeesError 
   } = useGetEmployeesByDepartment(departmentId);
   console.log('employees',employees);
-  // Filter employees based on search term
+  
   const filteredEmployees = employees?.filter(
     (employee) => 
       employee.firstName.toLowerCase().includes(searchTerm.toLowerCase()) ||
@@ -70,11 +70,11 @@ export default function DepartmentDetailPage() {
   const isLoading = isLoadingDepartment || isLoadingEmployees;
   const isError = isDepartmentError || isEmployeesError;
   
-  // Check user permissions
+  
   const isDirector = user?.role === EmployeeRole.Director;
   const isLeaderOrDirector = user?.role === EmployeeRole.Leader || user?.role === EmployeeRole.Director;
   
-  // Get role display name
+  
   const getRoleDisplay = (role: EmployeeRole): string => {
     switch (role) {
       case EmployeeRole.Director:
@@ -88,7 +88,7 @@ export default function DepartmentDetailPage() {
     }
   };
   
-  // Get role badge variant
+  
   const getRoleBadgeVariant = (role: EmployeeRole) => {
     switch (role) {
       case EmployeeRole.Director:
diff --git a/front-next/src/app/(routes)/departments/page.tsx b/front-next/src/app/(routes)/departments/page.tsx
index 7dee92b..973fc4c 100644
--- a/front-next/src/app/(routes)/departments/page.tsx
+++ b/front-next/src/app/(routes)/departments/page.tsx
@@ -1,7 +1,7 @@
 "use client";
 
 import { useState, useEffect } from "react";
-import { Search, PlusCircle } from "lucide-react";
+import {  PlusCircle } from "lucide-react";
 
 import { useAuth } from "@/hooks/use-auth";
 import { EmployeeRole } from "@/types/employee";
@@ -23,19 +23,19 @@ export default function DepartmentsPage() {
   const { user } = useAuth();
   const [searchTerm, setSearchTerm] = useState("");
   
-  // Dialog states
+  
   const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);
   const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);
   const [selectedDepartment, setSelectedDepartment] = useState<Department | undefined>(undefined);
   
-  // API hooks
+  
   const { data: departments, isLoading: isLoadingDepts } = useGetDepartments();
   const { data: employees, isLoading: isLoadingEmployees } = useGetEmployees();
   const createDepartment = useCreateDepartment();
   const updateDepartment = useUpdateDepartment(selectedDepartment?.id || "");
   const deleteDepartment = useDeleteDepartment();
 
-  // Stats calculations
+  
   const [stats, setStats] = useState<DepartmentStatsData>({
     totalDepartments: 0,
     activeDepartments: 0,
@@ -45,7 +45,7 @@ export default function DepartmentsPage() {
     oldestDepartment: "",
   });
 
-  // Calculate employee counts per department
+  
   const employeeCounts: Record<string, number> = {};
   if (departments && employees) {
     departments.forEach(dept => {
@@ -53,15 +53,15 @@ export default function DepartmentsPage() {
     });
   }
 
-  // Filter departments based on search term
+  
   const filteredDepartments = departments?.filter(
     (department) => department.name.toLowerCase().includes(searchTerm.toLowerCase())
   ) || [];
 
-  // Only directors can create departments
+  
   const canManageDepartments = user?.role === EmployeeRole.Director;
 
-  // Handle department creation/update
+  
   const handleSubmitDepartment = async (data: CreateDepartmentDto | UpdateDepartmentDto) => {
     if ('id' in data) {
       await updateDepartment.mutateAsync(data);
@@ -72,7 +72,7 @@ export default function DepartmentsPage() {
     setIsCreateDialogOpen(false);
   };
 
-  // Handle department deletion
+  
   const handleDeleteDepartment = async () => {
     if (selectedDepartment) {
       await deleteDepartment.mutateAsync(selectedDepartment.id);
@@ -81,7 +81,7 @@ export default function DepartmentsPage() {
     }
   };
 
-  // Handle edit button click
+  
   const handleEditDepartment = (id: string) => {
     const department = departments?.find(d => d.id === id);
     if (department) {
@@ -90,7 +90,7 @@ export default function DepartmentsPage() {
     }
   };
 
-  // Handle delete button click
+  
   const handleDeleteClick = (id: string) => {
     const department = departments?.find(d => d.id === id);
     if (department) {
@@ -99,15 +99,15 @@ export default function DepartmentsPage() {
     }
   };
 
-  // Calculate stats
+  
   useEffect(() => {
     if (departments && employees) {
-      // Sort departments by creation date
+      
       const sortedDepartments = [...departments].sort((a, b) => 
         new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()
       );
 
-      // Calculate stats
+      
       const totalDepartments = departments.length;
       const activeDepartments = departments.filter(d => d.isActive).length;
       const totalEmployees = employees.totalCount;
@@ -128,7 +128,7 @@ export default function DepartmentsPage() {
     }
   }, [departments, employees]);
 
-  // Renderização condicional para estado de carregamento
+  
   if (isLoadingDepts || isLoadingEmployees) {
     return (
       <main className="bg-background min-h-screen">
@@ -156,21 +156,21 @@ export default function DepartmentsPage() {
 
   return (
     <main className="bg-background min-h-screen">
-      {/* Header */}
+      {}
       <DepartmentHeader 
         title="Gerenciamento de Departamentos" 
         subtitle="Visualize, crie e gerencie os departamentos da empresa" 
       />
 
-      {/* Main Content */}
+      {}
       <div className="container px-6 py-8">
-        {/* Stats Overview */}
+        {}
         <DepartmentStatsOverview 
           data={stats} 
           isLoading={false} 
         />
 
-        {/* Search and Add */}
+        {}
         <div className="flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mt-8">
           <FilterBar
             searchTerm={searchTerm}
@@ -192,7 +192,7 @@ export default function DepartmentsPage() {
           )}
         </div>
 
-        {/* Departments Grid */}
+        {}
         <div className="mt-6">
           <DepartmentGrid 
             departments={filteredDepartments} 
@@ -204,7 +204,7 @@ export default function DepartmentsPage() {
         </div>
       </div>
 
-      {/* Department Create/Edit Dialog */}
+      {}
       <DepartmentDialog
         open={isCreateDialogOpen}
         onOpenChange={setIsCreateDialogOpen}
@@ -213,7 +213,7 @@ export default function DepartmentsPage() {
         isLoading={createDepartment.isPending || updateDepartment.isPending}
       />
 
-      {/* Delete Confirmation Dialog */}
+      {}
       <ConfirmDeleteDialog
         open={isDeleteDialogOpen}
         onOpenChange={setIsDeleteDialogOpen}
diff --git a/front-next/src/app/(routes)/employees/[id]/page.tsx b/front-next/src/app/(routes)/employees/[id]/page.tsx
index e083cb5..0945274 100644
--- a/front-next/src/app/(routes)/employees/[id]/page.tsx
+++ b/front-next/src/app/(routes)/employees/[id]/page.tsx
@@ -1,65 +1,63 @@
   "use client";
 
-  import { useState, useEffect } from "react";
-  import { useRouter } from "next/navigation";
   import { zodResolver } from "@hookform/resolvers/zod";
-  import { useForm } from "react-hook-form";
-  import { CalendarIcon, ArrowLeft, Save, Trash2, UserCheck } from "lucide-react";
-  import { format } from "date-fns";
-  import { ptBR } from "date-fns/locale";
-  import * as z from "zod";
+import { format } from "date-fns";
+import { ptBR } from "date-fns/locale";
+import { ArrowLeft, CalendarIcon, UserCheck } from "lucide-react";
+import { useRouter } from "next/navigation";
+import { useEffect, useState } from "react";
+import { useForm } from "react-hook-form";
+import * as z from "zod";
 
   import { useAuth } from "@/hooks/use-auth";
-  import { Employee, EmployeeRole, PhoneType } from "@/types/employee";
-  import { useGetEmployee, useUpdateEmployee, useDeleteEmployee } from "@/services/employee/queries";
-  import { useGetDepartments } from "@/services/department/queries";
-  import { useGetManagers } from "@/services/employee/queries";
+import { useGetDepartments } from "@/services/department/queries";
+import { useDeleteEmployee, useGetEmployee, useGetManagers, useUpdateEmployee } from "@/services/employee/queries";
+import { EmployeeRole, PhoneType } from "@/types/employee";
 
-  import {
-    Card,
-    CardContent,
-    CardDescription,
-    CardFooter,
-    CardHeader,
-    CardTitle,
-  } from "@/components/ui/card";
-  import {
-    Form,
-    FormControl,
-    FormDescription,
-    FormField,
-    FormItem,
-    FormLabel,
-    FormMessage,
-  } from "@/components/ui/form";
-  import { Input } from "@/components/ui/input";
-  import { Button } from "@/components/ui/button";
-  import {
-    Select,
-    SelectContent,
-    SelectItem,
-    SelectTrigger,
-    SelectValue,
-  } from "@/components/ui/select";
-  import {
-    Dialog,
-    DialogContent,
-    DialogDescription,
-    DialogFooter,
-    DialogHeader,
-    DialogTitle,
-  } from "@/components/ui/dialog";
-  import {
-    Popover,
-    PopoverContent,
-    PopoverTrigger,
-  } from "@/components/ui/popover";
-  import { Calendar } from "@/components/ui/calendar";
   import { Badge } from "@/components/ui/badge";
-  import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
-  import { toast } from "sonner";
+import { Button } from "@/components/ui/button";
+import { Calendar } from "@/components/ui/calendar";
+import {
+  Card,
+  CardContent,
+  CardDescription,
+  CardHeader,
+  CardTitle
+} from "@/components/ui/card";
+import {
+  Dialog,
+  DialogContent,
+  DialogDescription,
+  DialogFooter,
+  DialogHeader,
+  DialogTitle,
+} from "@/components/ui/dialog";
+import {
+  Form,
+  FormControl,
+  FormDescription,
+  FormField,
+  FormItem,
+  FormLabel,
+  FormMessage,
+} from "@/components/ui/form";
+import { Input } from "@/components/ui/input";
+import {
+  Popover,
+  PopoverContent,
+  PopoverTrigger,
+} from "@/components/ui/popover";
+import {
+  Select,
+  SelectContent,
+  SelectItem,
+  SelectTrigger,
+  SelectValue,
+} from "@/components/ui/select";
+import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
+import { toast } from "sonner";
 
-  // Schema de validação do formulário
+  
   const employeeFormSchema = z.object({
     firstName: z.string().min(2, "Nome deve ter pelo menos 2 caracteres"),
     lastName: z.string().min(2, "Sobrenome deve ter pelo menos 2 caracteres"),
@@ -100,9 +98,9 @@
     const [activeTab, setActiveTab] = useState("profile");
     const [showDeleteDialog, setShowDeleteDialog] = useState(false);
     
-    // Verifica se o modo de edição deve ser ativado automaticamente
+    
     useEffect(() => {
-      // Em ambiente cliente, podemos acessar a URL
+      
       if (typeof window !== "undefined") {
         const params = new URLSearchParams(window.location.search);
         const editMode = params.get("edit") === "true";
@@ -113,22 +111,22 @@
       }
     }, []);
     
-    // Fetch data from API
+    
     const { data: employee, isLoading, isError } = useGetEmployee(params.id);
     const { data: departments } = useGetDepartments();
     const { data: managers } = useGetManagers();
     
-    // Mutations
+    
     const updateEmployee = useUpdateEmployee();
     const deleteEmployee = useDeleteEmployee();
     
-    // Access control
+    
     const isDirector = user?.role === EmployeeRole.Director;
     const isLeaderOrDirector = user?.role === EmployeeRole.Leader || user?.role === EmployeeRole.Director;
     const canEdit = isLeaderOrDirector;
     const canDelete = isDirector;
     console.log('user', user);
-    // Form setup
+    
     const employeeForm = useForm<EmployeeFormValues>({
       resolver: zodResolver(employeeFormSchema),
       defaultValues: {
@@ -144,7 +142,7 @@
       }
     });
     
-    // Set form values when employee data is loaded
+    
     useEffect(() => {
       if (employee) {
         employeeForm.reset({
@@ -161,7 +159,7 @@
       }
     }, [employee, employeeForm]);
     
-    // Form submission
+    
     const onSubmit = async (data: EmployeeFormValues) => {
       if (!employee || !employee.id) return;
       
@@ -191,7 +189,7 @@
       }
     };
     
-    // Handle delete confirmation
+    
     const handleDelete = async () => {
       if (!employee || !employee.id) return;
       
@@ -205,7 +203,7 @@
       }
     };
     
-    // Get role display name
+    
     const getRoleDisplay = (role: EmployeeRole): string => {
       switch (role) {
         case EmployeeRole.Director:
@@ -219,7 +217,7 @@
       }
     };
     
-    // Get role badge variant
+    
     const getRoleBadgeVariant = (role: EmployeeRole) => {
       switch (role) {
         case EmployeeRole.Director:
@@ -233,7 +231,7 @@
       }
     };
     
-    // Get phone type label
+    
     const getPhoneTypeLabel = (type: PhoneType): string => {
       switch (type) {
         case PhoneType.Mobile:
@@ -247,7 +245,7 @@
       }
     };
     
-    // Loading state
+    
     if (isLoading) {
       return (
         <div className="container mx-auto py-6">
@@ -264,7 +262,7 @@
       );
     }
     
-    // Error state
+    
     if (isError || !employee) {
       return (
         <div className="container mx-auto py-6">
@@ -418,7 +416,7 @@
                   <Form {...employeeForm}>
                     <form onSubmit={employeeForm.handleSubmit(onSubmit)} className="space-y-6">
                       <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
-                        {/* First Name */}
+                        {}
                         <FormField
                           control={employeeForm.control}
                           name="firstName"
@@ -433,7 +431,7 @@
                           )}
                         />
                         
-                        {/* Last Name */}
+                        {}
                         <FormField
                           control={employeeForm.control}
                           name="lastName"
@@ -448,7 +446,7 @@
                           )}
                         />
                         
-                        {/* Email */}
+                        {}
                         <FormField
                           control={employeeForm.control}
                           name="email"
@@ -463,7 +461,7 @@
                           )}
                         />
                         
-                        {/* Document Number */}
+                        {}
                         <FormField
                           control={employeeForm.control}
                           name="documentNumber"
@@ -478,7 +476,7 @@
                           )}
                         />
                         
-                        {/* Birth Date */}
+                        {}
                         <FormField
                           control={employeeForm.control}
                           name="birthDate"
@@ -521,7 +519,7 @@
                           )}
                         />
                         
-                        {/* Role */}
+                        {}
                         <FormField
                           control={employeeForm.control}
                           name="role"
@@ -552,7 +550,7 @@
                           )}
                         />
                         
-                        {/* Department */}
+                        {}
                         <FormField
                           control={employeeForm.control}
                           name="department"
@@ -581,7 +579,7 @@
                           )}
                         />
                         
-                        {/* Manager */}
+                        {}
                         <FormField
                           control={employeeForm.control}
                           name="managerId"
@@ -612,7 +610,7 @@
                         />
                       </div>
                       
-                      {/* Phone Numbers */}
+                      {}
                       <div className="space-y-2">
                         <FormLabel>Telefones</FormLabel>
                         {employeeForm.watch("phoneNumbers")?.map((phone, index) => (
@@ -757,7 +755,7 @@
           </TabsContent>
         </Tabs>
         
-        {/* Delete Confirmation Dialog */}
+        {}
         <Dialog open={showDeleteDialog} onOpenChange={setShowDeleteDialog}>
           <DialogContent>
             <DialogHeader>
diff --git a/front-next/src/app/(routes)/page.tsx b/front-next/src/app/(routes)/page.tsx
index 8463e40..bc6f8fb 100644
--- a/front-next/src/app/(routes)/page.tsx
+++ b/front-next/src/app/(routes)/page.tsx
@@ -7,12 +7,13 @@ import { useAuth } from "@/hooks/use-auth";
 import { Button } from "@/components/ui/button";
 import { Users, LayoutDashboard, Building } from "lucide-react";
 
+// Página inicial da aplicação
 export default function HomePage() {
   const { user, isLoading } = useAuth();
   const router = useRouter();
 
+  // Redirecionar para login se não estiver autenticado
   useEffect(() => {
-    // Se não estiver autenticado, redireciona para o login
     if (!isLoading && !user) {
       router.push("/login");
     }
diff --git a/front-next/src/app/(routes)/profile/page.tsx b/front-next/src/app/(routes)/profile/page.tsx
index 9da7beb..0f51382 100644
--- a/front-next/src/app/(routes)/profile/page.tsx
+++ b/front-next/src/app/(routes)/profile/page.tsx
@@ -10,11 +10,13 @@ import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
 import { PhoneType } from "@/types/employee";
 
 import { ProfileHeader } from "@/components/pages/profile/profile-header";
-import { PersonalInfoForm, PersonalInfoFormValues } from "@/components/pages/profile/personal-info-form";
-import { PasswordForm, PasswordFormValues } from "@/components/pages/profile/password-form";
+import { PersonalInfoForm } from "@/components/pages/profile/personal-info-form";
+import { PasswordForm } from "@/components/pages/profile/password-form";
+import { PersonalInfoFormValues } from '@/schemas/employee';
+import { PasswordFormValues } from '@/schemas/auth';
 
 export default function ProfilePage() {
-  // Usar um estado para controlar a fase de hidratação
+  
   const [isHydrated, setIsHydrated] = useState(false);
   const { data: user, isLoading: isLoadingUser, isError: isUserError } = useCurrentUser();
   const { data: detailedUser, isLoading: isLoadingDetails, isError: isDetailsError } = useDetailedUserInfo();
@@ -23,7 +25,7 @@ export default function ProfilePage() {
   const isLoading = isLoadingUser || isLoadingDetails;
   const isError = isUserError || isDetailsError;
   
-  // Marcar que a página foi hidratada após a renderização inicial
+  
   useEffect(() => {
     setIsHydrated(true);
   }, []);
@@ -32,7 +34,7 @@ export default function ProfilePage() {
   const updatePassword = useUpdateEmployeePassword();
 
   const onPersonalInfoSubmit = async (data: PersonalInfoFormValues) => {
-    // Normalizar dados do usuário para ter um formato consistente
+    
     const normalizedUser = normalizeUserData(detailedUser || user);
     
     if (!normalizedUser || !normalizedUser.id) {
@@ -41,30 +43,30 @@ export default function ProfilePage() {
     }
 
     try {
-      // Processamento seguro dos telefones com validação adicional
+      
       const processedPhoneNumbers = (data.phoneNumbers || [])
-        .filter(phone => phone && typeof phone === 'object') // Garantir que sejam objetos válidos
+        .filter(phone => phone && typeof phone === 'object') 
         .map(phone => {
-          // Se o ID for vazio, nulo ou undefined, omitir completamente a propriedade id
-          // Em vez de enviar undefined, que pode causar problemas de serialização
+          
+          
           const phoneObj: any = {
             number: (phone.number || "").trim(),
             type: Number(phone.type) || PhoneType.Mobile
           };
           
-          // Adicionar ID apenas se for uma string válida não vazia
+          
           if (phone.id && typeof phone.id === 'string' && phone.id.trim() !== '') {
             phoneObj.id = phone.id.trim();
           }
           
           return phoneObj;
         })
-        .filter(phone => phone.number.length >= 8); // Filtrar telefones com número válido
+        .filter(phone => phone.number.length >= 8); 
 
-      // Tratar datas de forma segura
+      
       const birthDateISOString = toISODateString(data.birthDate);
       
-      // Dados validados prontos para envio
+      
       await updateProfile.mutateAsync({
         id: normalizedUser.id,
         data: {
@@ -84,7 +86,7 @@ export default function ProfilePage() {
   };
 
   const onPasswordSubmit = async (data: PasswordFormValues) => {
-    // Normalizar dados do usuário para ter um formato consistente
+    
     const normalizedUser = normalizeUserData(detailedUser || user);
     
     if (!normalizedUser || !normalizedUser.id) {
@@ -93,7 +95,7 @@ export default function ProfilePage() {
     }
 
     try {
-      // Validar dados da senha antes de enviar
+      
       if (data.newPassword !== data.confirmNewPassword) {
         toast.error("As senhas não coincidem.");
         return;
@@ -133,7 +135,7 @@ export default function ProfilePage() {
     );
   }
 
-  // Renderizar um esqueleto até que a hidratação esteja completa
+  
   if (!isHydrated) {
     return (
       <div className="bg-background min-h-screen">
@@ -157,10 +159,10 @@ export default function ProfilePage() {
 
   return (
     <div className="bg-background min-h-screen" suppressHydrationWarning>
-      {/* Profile Header */}
+      {}
       <ProfileHeader user={detailedUser || user} isLoading={isLoading} />
 
-      {/* Main Content */}
+      {}
       <div className="container px-6 py-8">
         <Tabs
           defaultValue="profile"
diff --git a/front-next/src/app/auth/login/login-content.tsx b/front-next/src/app/auth/login/login-content.tsx
index 509241c..5f35068 100644
--- a/front-next/src/app/auth/login/login-content.tsx
+++ b/front-next/src/app/auth/login/login-content.tsx
@@ -14,22 +14,22 @@ export default function LoginContent() {
   const callbackUrl = searchParams.get("callbackUrl") || "/";
   const [formReady, setFormReady] = useState(false);
 
-  // Otimização para renderização mais rápida
+  
   useEffect(() => {
-    // Marcar formulário como pronto após a primeira renderização
+    
     if (!formReady) {
       setFormReady(true);
     }
     
-    // Se já estiver autenticado, redireciona para a página inicial ou callback
+    
     if (!isLoading && user) {
-      // Forçar redirecionamento para dashboard quando já estiver autenticado
+      
       setTimeout(() => {
         router.push(callbackUrl === "/" ? "/dashboard" : callbackUrl);
       }, 300);
     }
 
-    // Exibe mensagem de erro se houver
+    
     if (error) {
       toast.error(error);
     }
diff --git a/front-next/src/app/auth/login/page.tsx b/front-next/src/app/auth/login/page.tsx
index d3ed01f..6163fbf 100644
--- a/front-next/src/app/auth/login/page.tsx
+++ b/front-next/src/app/auth/login/page.tsx
@@ -4,7 +4,7 @@ import React, { Suspense } from "react";
 import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
 import LoginContent from "./login-content";
 
-// Precisamos manter como client component por causa do useSearchParams no LoginContent
+
 export default function LoginPage() {
   return (
     <div className="flex min-h-screen items-center justify-center bg-gray-50 dark:bg-gray-900 p-4">
diff --git a/front-next/src/app/auth/register/register-content.tsx b/front-next/src/app/auth/register/register-content.tsx
index c1e385e..b18dba8 100644
--- a/front-next/src/app/auth/register/register-content.tsx
+++ b/front-next/src/app/auth/register/register-content.tsx
@@ -12,7 +12,7 @@ export default function RegisterContent() {
   const callbackUrl = searchParams.get("callbackUrl") || "/";
 
   useEffect(() => {
-    // Exibe mensagem de erro se houver
+    
     if (error) {
       toast.error(error);
     }
diff --git a/front-next/src/app/globals.css b/front-next/src/app/globals.css
index 6e0eb3c..dadf24a 100644
--- a/front-next/src/app/globals.css
+++ b/front-next/src/app/globals.css
@@ -80,37 +80,3 @@
   }
 }
 
-/* @font-face {
-  font-family: 'Poppins';
-  font-style: normal;
-  font-weight: 300;
-  src: url('/fonts/Poppins-Light.woff2') format('woff2');
-}
-
-@font-face {
-  font-family: 'Poppins';
-  font-style: normal;
-  font-weight: 400;
-  src: url('/fonts/Poppins-Regular.woff2') format('woff2');
-}
-
-@font-face {
-  font-family: 'Poppins';
-  font-style: normal;
-  font-weight: 500;
-  src: url('/fonts/Poppins-Medium.woff2') format('woff2');
-}
-
-@font-face {
-  font-family: 'Poppins';
-  font-style: normal;
-  font-weight: 600;
-  src: url('/fonts/Poppins-SemiBold.woff2') format('woff2');
-}
-
-@font-face {
-  font-family: 'Poppins';
-  font-style: normal;
-  font-weight: 700;
-  src: url('/fonts/Poppins-Bold.woff2') format('woff2');
-} */
\ No newline at end of file
diff --git a/front-next/src/app/layout.tsx b/front-next/src/app/layout.tsx
index a548be1..0a8918c 100644
--- a/front-next/src/app/layout.tsx
+++ b/front-next/src/app/layout.tsx
@@ -36,7 +36,7 @@ export default function RootLayout({
         <ReduxProvider>
           <QueryProvider>
             <AuthProvider>
-              {/* Componente para sincronizar o token entre localStorage e cookies */}
+              {}
               <TokenSync>
                 <div className="relative flex min-h-screen flex-col">
                   <Header />
